{
  "start_symbol": "P'",
  "empty_string": "null",
  "terminals": "proc id ; struct int unsigned long char short float double bool { } [ ] = + * - / % ^ ( ) if then else while do or and not true false < <= == != > >= call , $ dec oct hex const_int const_float const_char const_string e-notation",
  "non_terminals": "P' P S D X C E L B RelOp ELst Num Op N1 N2 N3 M1",
  "rules": {
    "P'": [
      "P"
    ],
    "P": [
      "D P",
      "S P",
      "null"
    ],
    "S": [
      "S M1 S",
      "id = E ;",
      "L = E ;",
      "if B then M1 S",
      "if B then M1 S N3 else M1 S",
      "while M1 B do M1 S",
      "call id ( ELst ) ;"
    ],
    "D": [
      "D D",
      "proc id ; N1 D S",
      "X id C ;",
      "struct id { D } ;"
    ],
    "X": [
      "int",
      "unsigned",
      "long",
      "short",
      "char",
      "double",
      "float",
      "bool"
    ],
    "C": [
      "[ Num ] C",
      "null"
    ],
    "Num": [
      "dec",
      "oct",
      "hex",
      "const_int",
      "const_float",
      "e-notation"
    ],
    "E": [
      "E Op E",
      "- E",
      "( E )",
      "id",
      "L",
      "Num",
      "const_char",
      "const_string"
    ],
    "Op": [
      "+",
      "-",
      "*",
      "/",
      "%",
      "^"
    ],
    "L": [
      "id [ E ]",
      "L [ E ]"
    ],
    "B": [
      "B or M1 B",
      "B and M1 B",
      "not B",
      "( B )",
      "E RelOp E",
      "true",
      "false"
    ],
    "RelOp": [
      "<",
      "<=",
      "==",
      "!=",
      ">",
      ">="
    ],
    "ELst": [
      "ELst , E",
      "E"
    ],
    "N1": [
      "null"
    ],
    "N2": [
      "null"
    ],
    "N3": [
      "null"
    ],
    "M1": [
      "null"
    ]
  }
}